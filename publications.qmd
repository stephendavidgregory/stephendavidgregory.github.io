---
title: "Publications"
author: ""
date: ""
categories: ""
---

```{r}
#| echo: false
#| warning: false

# libraries
library(bibtex)
library(DT)
library(knitr)

# read in biblio
bib <- read.bib('C:/Users/SG14/CV/Gregory.bib')

# get citations
o <- unlist(lapply(bib, function(v) paste0(capture.output(v), collapse = ' ')))

# ensure acsii
o <- iconv(o, 'utf-8', 'ascii', sub = '')

# rid of a few things
o <- gsub('In: |pp. ', '', o)

# get authors
foo <- lapply(bib, function(v) v$author)
a <- vector('list', length = length(foo))
for (i in 1:length(foo)) {
  fii <- as.character(foo[[i]])
  if (length(fii) != 1) {
    if (length(foo[[i]]) > 4) {
      fii <- paste0(c(fii[1:3], 'et al.'), collapse = ', ')
    } else {
      fee <- paste0(fii[1:(length(fii) - 1)], collapse = ', ')
      fii <- paste0(fee, ' & ', rev(fii)[1])
    }
  }
  a[[i]] <- fii 
}

# replace authors in o
o_ <- sapply(o, function(v) gsub('^(.*) (\\([0-9]{4}\\)\\. .*$)', '\\2', v))
o <- paste(a, o_)

# get year
y <- as.numeric(unlist(lapply(bib, function(v) v$year)))
 
# get DOI
## extract them
d <- lapply(bib, function(v) v$doi)
## add doi.org
d <- unlist(lapply(d, function(v) ifelse(is.null(v), '', paste0('https://doi.org/', v))))
## clean them
d <- gsub('\\.$', '', d)
## convert to html link
d <- ifelse(d == '', 
            '', 
            paste0("<a href='", d, "' target = '_blank'>link</a>"))

# get pdfs
## get file names from bib
p <- paste0(names(bib), ".pdf")
## get full file names from Literature
p_fls <- list.files(path = 'C:/Users/SG14/Literature/',
                    pattern = paste0(unlist(p), collapse = '|'),
                    full.names = TRUE)
## copy them to pubs_static
pubs_static <- 'C:/Users/SG14/Website/stephendavidgregory.github.io/reprints/'
invisible(file.copy(p_fls, pubs_static, overwrite = TRUE))

# pdf links
## find entries with pdf
p_l <- vector('character', length = length(p))
## index of files
idx <- match(p, gsub("C:/Users/SG14/Literature/", "", p_fls))
## add file locations
p_locs <- ifelse(is.na(idx), '', p_fls[idx])
## add links
for (i in 1:length(p)) {
  if (p_locs[i] != "") {
    p_l[i] <- paste0('<a href="/reprints/', p[i], '" target="_blank">pdf</a>')
  } else {
    p_l[i] <- ""
  }
}

# remove stuff from citations
o <- gsub("\"", "", o)

# md to html markup
o <- sub("_", "<i>", o)
o <- sub("_", "</i>", o)
o <- sub("\\*", "<b>", o)
o <- sub("\\*", "</b>", o)

# make publications data.frame
pubs_df <- data.frame('citation' = o,
                      'year' = y,
                      'doi' = d,
                      'pdf' = p_l)

# remove an entries without year, e.g., in prep
pubs_df <- subset(pubs_df, !is.na(year))

# order it
pubs_df <- pubs_df[with(pubs_df, order(-year, citation)), ]

# reset row names
rownames(pubs_df) <- 1:nrow(pubs_df)

# make datatable
pubs_dt <- datatable(pubs_df, 
                     width = "100%",
                     height = "auto",
                     escape = FALSE, 
                     extensions = list(Scroller = NULL, FixedColumns = list(leftColumns = 2)),
                     options = list(pageLength = 10,
                                    lengthMenu = c(5, 10, 15, 20, nrow(pubs_df)),
                                    dom = 'T<"clear">lfrtip',
                                    autoWidth = FALSE,
                                    columnDefs = list(list(width = '10%', targets = c(2, 3, 4))),
                                    scrollX = FALSE, scrollY = FALSE, scrollCollapse = TRUE))

# print it
knit_print(x = pubs_dt) 

```
