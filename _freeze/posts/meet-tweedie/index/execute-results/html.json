{
  "hash": "0f946dcd6f7798a82c6dda094ee37a83",
  "result": {
    "markdown": "---\ntitle: \"Meet Tweedie\"\nsubtitle: \"An exploration of the Tweedie family of distributions\"\ndate: \"2023-03-07\"\ncategories: [\"statistics\", \"code\"] # environmental-change, tagging-and-telemetry, allee-effects, invasive-species, statistics, code\nimage: \"tweedie.png\"\nimage-alt: \"Tweedie says 'hi'\"\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n\nI'm working with some spatio-temporally patchy fisheries count data. To allow for their highly variable nature, I was recommended to look at the Tweedie family of distributions. I thought I'd write a post to introduce Tweedie and what I learnt.\n\n# Tweedie definition\n\nThe Tweedie distributions are a subfamily of the Exponential distributions, but with a special mean-variance relationship with:\n\n- a mean of $E(Y) = \\mu$;\n- a positive dispersion parameter $\\sigma^2$; and\n- a variance of $Var(Y) = \\sigma^2 \\mu^p$.\n\nThe $p$ in the variance function is often called the \"Tweedie power\" parameter and acts as an additional shape parameter for the distribution. It is sometimes written in terms of the shape parameter $\\alpha$:\n\n$$\np = \\frac{(\\alpha - 2)}{(\\alpha - 1)}\n$$\n\nSome familiar distributions are special cases of the Tweedie distribution:\n\n-   $p = 0$: Normal distribution;\n-   $p = 1$: Poisson distribution;\n-   $1 < p < 2$: Compound Poisson/gamma distribution;\n-   $p = 2$: gamma distribution;\n-   $2 < p < 3$: Positive stable distributions;\n-   $p = 3$: Inverse Gaussian distribution / Wald distribution;\n-   $p > 3$: Positive stable distributions; and\n-   $p = \\infty$: Extreme stable distributions.\n\n(Note that the distribution is not defined for $p$ values $0 < p < 1$.)\n\n# Poisson-like Tweedie cases\n\nSince I am working with counts, the Tweedie distributions related to the Poisson distribution were of particular interest to me. Specifically, I was interested to explore the Tweedie distributions with power parameter values from 1 to 2.\n\nWith the help of the [`R`](https://www.r-project.org/) package [`tweedie`](https://cran.r-project.org/package=tweedie), we can plot histograms of those distributions as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries\nlibrary(tweedie)\nlibrary(data.table)\nlibrary(ggplot2)\n\n# xis (also known as powers)\nxis <- seq(1, 2, length.out = 12)\n\n# make wide\nd <- as.data.table(lapply(xis, \n                          function(v) \n                            rtweedie(n = 1000, mu = 1, phi = 1, xi = v)))\n\n# set names\nsetnames(d, colnames(d), paste0(\"xi = \", sprintf(\"%.01f\", xis)))\n\n# make long\ndl <- stack(d)\n\n# make plot\np <- ggplot(dl, aes(x = values)) +\n  geom_histogram(binwidth = 0.1) +\n  facet_wrap(~ ind) +\n  labs(x = \"value\", y = \"frequency\") +\n  theme_minimal()\n\n# save plot\njpeg(\"tweedie-histograms.jpg\", res = 300, width = (480 * 5), height = (480 * 5))\nprint(p)\ndev.off()\n```\n:::\n\n\n\n![](tweedie-histograms.jpg)\n\n\nIt is interesting to note that as $p \\to 1$ so the Tweedie distribution allows for greater mass of points at 0 (zero). This is a particularly useful feature of the Tweedie when dealing with highly variable and sometimes low counts that are frequently at or around 0.\n\n\n# Using the Tweedie\n\nI'm going to adapt the example from the `tweedie()` distribution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library\nlibrary(statmod)\n\n# response and explanatory variables\ny <- rgamma(n = 200, scale = 1, shape = 1)\nx <- rpois(200, lambda = 10)\n\n# tweedie profile\nout <- tweedie.profile(y ~ 1, p.vec = seq(1.5, 2.5, by=0.2))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in model.matrix.default(mt, mf, contrasts): non-list contrasts argument\nignored\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n1.5 1.7 1.9 2.1 2.3 2.5 \n......Done.\n```\n:::\n\n```{.r .cell-code}\nprint(out$p.max)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.05102\n```\n:::\n\n```{.r .cell-code}\nprint(out$ci)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.885009 2.230231\n```\n:::\n\n```{.r .cell-code}\n# fit a poisson generalized linear model with identity link\nm1 <- glm(y ~ x, family = tweedie(var.power = 1, link.power = 1))\nprint(summary(m1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ x, family = tweedie(var.power = 1, link.power = 1))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.4165  -0.9003  -0.3048   0.4581   2.8102  \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.86376    0.25531   3.383 0.000864 ***\nx            0.01391    0.02423   0.574 0.566455    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Tweedie family taken to be 0.989408)\n\n    Null deviance: 178.02  on 199  degrees of freedom\nResidual deviance: 177.67  on 198  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n\n```{.r .cell-code}\n# fit an inverse-Gaussion glm with log-link\nm0 <- glm(y ~ x, family = tweedie(var.power = 3, link.power = 0))\nprint(summary(m0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ x, family = tweedie(var.power = 3, link.power = 0))\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-12.9320   -1.4851   -0.3246    0.3920    1.8081  \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept) -0.12647    0.25390  -0.498    0.619\nx            0.01287    0.02408   0.534    0.594\n\n(Dispersion parameter for Tweedie family taken to be 0.9764311)\n\n    Null deviance: 1051.8  on 199  degrees of freedom\nResidual deviance: 1051.5  on 198  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 25\n```\n:::\n:::\n\n\nI'm going to revisit Tweedie soon, so watch this space...\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}